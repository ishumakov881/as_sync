<templateSet group="_Me_Kotlin">
  <template name="pag" value=" // Пагинация&#10;private var currentPage = 1&#10;val pageSize = 10" description="Pagination" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_EXPRESSION" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="KOTLIN_TOPLEVEL" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
  <template name="prev2" value="&#10;//================================================================================&#10;// PREVIEW: $FILENAME$&#10;//================================================================================&#10;&#10;@Preview(name = &quot;Phone (Pixel)&quot;, showBackground = true, device = Devices.PIXEL)&#10;@Composable&#10;fun $COMPOSABLE_NAME$_PixelPreview() {&#10;    MaterialTheme {&#10;        $FUN$&#10;    }&#10;}&#10;&#10;@Preview(name = &quot;Phone (360x800 dp)&quot;, showBackground = true, widthDp = 360, heightDp = 800)&#10;@Composable&#10;fun $COMPOSABLE_NAME$_PhonePreview() {&#10;    MaterialTheme {&#10;        $FUN$&#10;    }&#10;}&#10;&#10;@Preview(name = &quot;Tablet (1024x768 dp)&quot;, showBackground = true, widthDp = 1024, heightDp = 768)&#10;@Composable&#10;fun $COMPOSABLE_NAME$_TabletPreview() {&#10;    MaterialTheme {&#10;        $FUN$&#10;    }&#10;}&#10;&#10;@Preview(name = &quot;Landscape&quot;, showBackground = true, widthDp = 500, heightDp = 300)&#10;@Composable&#10;fun $COMPOSABLE_NAME$_LandscapePreview() {&#10;    MaterialTheme {&#10;        $FUN$&#10;    }&#10;}" description="Preview" toReformat="false" toShortenFQNames="true">
    <variable name="FILENAME" expression="fileName()" defaultValue="" alwaysStopAt="false" />
    <variable name="COMPOSABLE_NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
    <variable name="FUN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
  <template name="screens" value="$INPUT$&#10;$SCREENS$&#10;$END$" description="Preview" toReformat="false" toShortenFQNames="true">
    <variable name="INPUT" expression="" defaultValue="ss sss sss sss" alwaysStopAt="true" />
    <variable name="SCREENS" expression="groovyScript(&quot;C\:\\android\\1.groovy&quot;, INPUT)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
  <template name="scrb" value="//ВАЖНО! BackHandler делать тут! т.к глобальный BackHandler перехватывает уже после выполнения bottom навигации&#10;                        BackHandler(drawerState.isOpen || isFullScreen != FullScreen.None) {&#10;                            if (isFullScreen != FullScreen.None) {&#10;                                isFullScreen = FullScreen.None&#10;                            } else if (drawerState.isOpen) {&#10;                                scope.launch {&#10;                                    drawerState.close()&#10;                                }&#10;                            }&#10;                            println(&quot;Back pressed&quot;)&#10;                        }" description="Screen BackHandler" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
  <template name="state" value="data class $NAME$State(&#10;val isLoading: Boolean = false,&#10;    val isLoadingMore: Boolean = false,&#10;    &#10;    val canLoadMore: Boolean = true, //Флаг, указывающий, можно ли загрузить еще данные&#10;    val currentPage: Int = 1// Пагинация&#10;)&#10;&#10;&#10;class $NAME$ViewModel(&#10;    val repository: PlaybackMediaItemRepository&#10;) : ViewModel() {&#10;&#10;&#10;    &#10;    private val _uiState = MutableStateFlow($NAME$State())&#10;    val uiState: StateFlow&lt;$NAME$State&gt; = _uiState.asStateFlow()&#10;&#10;&#10;    private fun setLoading(isLoading: Boolean) {&#10;        _uiState.update { it.copy(isLoading = isLoading) }&#10;    }&#10;&#10;    private fun setCanLoadMore(canLoadMore: Boolean) {&#10;        _uiState.update { it.copy(canLoadMore = canLoadMore) }&#10;    }&#10;    &#10;    private fun updatePage(page: Int) {&#10;        _uiState.update { it.copy(currentPage = page) }&#10;    }&#10;    &#10;    private fun setLoadingMore(isLoadingMore: Boolean) {&#10;        _uiState.update { it.copy(isLoadingMore = isLoadingMore) }&#10;    }&#10;    &#10;//===================================" description="UI-State ViewModel" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
  <template name="prefset" value="&#10;val PREF_KEY_$PREF_KEY$ = &quot;$NAME$&quot;&#10;&#10;var $NAME$: String&#10;        get() = store.getString(PREF_KEY_$PREF_KEY$, &quot;&quot;)&#10;        set(value) {&#10;            store.putString(PREF_KEY_$PREF_KEY$, value)&#10;        }" description="Preference com.russhwolf:multiplatform-settings" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PREF_KEY" expression="capitalizeAndUnderscore(NAME)" defaultValue="NAME 7777" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="PL/SQL" value="false" />
    </context>
  </template>
</templateSet>